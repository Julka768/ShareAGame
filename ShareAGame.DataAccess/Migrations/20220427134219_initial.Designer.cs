// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShareAGame.DataAccess;

namespace ShareAGame.DataAccess.Migrations
{
    [DbContext(typeof(ShareAGameContext))]
    [Migration("20220427134219_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ShareAGame.DataAccess.Entities.Publisher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7c7bc643-b767-4614-8724-fe96ecc57eb2"),
                            Name = "Ubisoft"
                        },
                        new
                        {
                            Id = new Guid("82642b42-06f4-43e5-847c-5433ce42b31b"),
                            Name = "Square Enix"
                        });
                });

            modelBuilder.Entity("ShareAGame.DataAccess.Models.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GamePlatform")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDigital")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("ReleaseDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c5703113-5f0a-4f17-af4f-83b330fa9c8a"),
                            GamePlatform = 6,
                            ImageUrl = "https://static.wikia.nocookie.net/tombraider/images/2/29/Rise_of_the_Tomb_Raider.jpg/revision/latest?cb=20170210221117&path-prefix=pl",
                            IsDigital = true,
                            Name = "Lara Croft Tomb Raider",
                            PublisherId = new Guid("82642b42-06f4-43e5-847c-5433ce42b31b"),
                            ReleaseDate = new DateTimeOffset(new DateTime(2018, 9, 12, 13, 20, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -5, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("3c54248d-572c-4e2f-861c-d8eb90fcf74d"),
                            GamePlatform = 0,
                            ImageUrl = "https://cdn1.epicgames.com/400347196e674de89c23cc2a7f2121db/offer/AC%20KINGDOM%20PREORDER_STANDARD%20EDITION_EPIC_Key_Art_Portrait_640x854-640x854-288120c5573756cb988b6c1968cebd86.png",
                            IsDigital = true,
                            Name = "Assasin Creed Valhalla",
                            PublisherId = new Guid("7c7bc643-b767-4614-8724-fe96ecc57eb2"),
                            ReleaseDate = new DateTimeOffset(new DateTime(2020, 11, 10, 13, 20, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -5, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("9db8341c-dc54-41cb-8ccb-72443da96f0e"),
                            GamePlatform = 4,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTaaud_5UmER7n84qaagoWadSzdUnahTfDRNw&usqp=CAU",
                            IsDigital = false,
                            Name = "Watch Dogs",
                            PublisherId = new Guid("7c7bc643-b767-4614-8724-fe96ecc57eb2"),
                            ReleaseDate = new DateTimeOffset(new DateTime(2014, 5, 26, 13, 20, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -5, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("ShareAGame.DataAccess.Models.Game", b =>
                {
                    b.HasOne("ShareAGame.DataAccess.Entities.Publisher", "Publisher")
                        .WithMany("Games")
                        .HasForeignKey("PublisherId")
                        .HasConstraintName("FK_dbo.game.Publisher_PublisherId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("ShareAGame.DataAccess.Entities.Publisher", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
